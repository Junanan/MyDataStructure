package HOT100;

import java.util.HashMap;
//给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。
//
//示例 1:
//
//输入: "abcabcbb"
//输出: 3 
//解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
//示例 2:
//
//输入: "bbbbb"
//输出: 1
//解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
//示例 3:
//
//输入: "pwwkew"
//输出: 3
//解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
//     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。
public class L3无重复字符的最长子串 {
	public int lengthOfLongestSubstring(String s) {
		if(s.length()==0) return 0;
		char[] a = s.toCharArray();
		HashMap<Character,Integer > map = new HashMap<>();
		int res =0;
		int left =0;
		for(int end =0;end<a.length;end++) {
			if(map.size()!=0&&map.containsKey(a[end])) {
				left = Math.max(left,map.get(a[end])+1);
			}
			res = Math.max(res, end+1-left);
			map.put(a[end], end);
		}
		return res;
	}
}
