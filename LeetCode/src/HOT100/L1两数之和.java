package HOT100;

import java.util.HashMap;

import javax.activation.MailcapCommandMap;

//给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。
//
//你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。
//
//
//
//示例:
//	
//	给定 nums = [2, 7, 11, 15], target = 9
//	
//	因为 nums[0] + nums[1] = 2 + 7 = 9
//	所以返回 [0, 1]
public class L1两数之和 {
	public static int[] twoSum(int[] nums, int target) {
			HashMap<Integer, Integer> map = new HashMap<>();
			int[] res = new int[2];
			for(int i=0;i<nums.length;i++) {
				map.put(nums[i], i);
			}
			for(int i=0;i<nums.length;i++) {
				if(map.containsKey(target-nums[i])&&(map.get(target-nums[i])!=i)) {
					res[0] =i;
					res[1] = map.get(target-nums[i]);
					break;
				}
			}
			return res;
	}
	public static void main(String[] args) {
		int[] nums = new int[] {3,2,4};
		System.out.println(twoSum(nums,6));
	}
}
