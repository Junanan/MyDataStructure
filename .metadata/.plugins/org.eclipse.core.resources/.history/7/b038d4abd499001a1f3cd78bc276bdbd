package 动态规划;
//121. 买卖股票的最佳时机
//给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。
//
//如果你最多只允许完成一笔交易（即买入和卖出一支股票一次），设计一个算法来计算你所能获取的最大利润。
//
//注意：你不能在买入股票前卖出股票。
public class L121 {
	public int maxProfit(int[] prices) {
		int len =prices.length;
		if(len<2) return 0;
		int[][] dp = new int[len][2];
		dp[0][0] = 0;
		dp[0][1] = -prices[0];
		for(int i =1 ;i<len;i++) {
			dp[i][0] = Math.max(dp[i-1][0], dp[i-1][1]+prices[i]);
			dp[i][1] = Math.max(dp[i-1][1], -prices[i]);
		}
		return dp[len-1][0];
    }
}
