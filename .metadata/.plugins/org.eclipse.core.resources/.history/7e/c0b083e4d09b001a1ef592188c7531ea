package ¶¯Ì¬¹æ»®;

public class L63 {
	 public static int uniquePathsWithObstacles(int[][] obstacleGrid) {
		 int row = obstacleGrid.length;
		 int col = obstacleGrid[0].length;
		 int count = dfs(obstacleGrid,0,0,row,col);
		 return count;
	    }

	private static int dfs(int[][] obstacleGrid, int i, int j, int row, int col) {
		if(i>row&&j>col&&obstacleGrid[i][j]!=1) return 0;
		if(obstacleGrid[i][j]==1) return 0;
		obstacleGrid[i][j] =1;
		int count  = 1; 
		count += dfs(obstacleGrid,i,j+1,row,col);
		count += dfs(obstacleGrid,i+1,j,row,col);
		return count;
	}
	public static void main(String[] args) {
		int[][] a = new int[][] {
		                          {0,0,0},
		                          {0,1,0},
		                          {0,0,0}};
		System.out.println(uniquePathsWithObstacles(a));
	}


}
